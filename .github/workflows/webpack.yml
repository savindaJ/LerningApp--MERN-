name: NodeJS with Webpack

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Build
      run: |
        npm install
        npx webpack
        
    - name: Setup Node.js environment
      uses: actions/setup-node@v4.0.1
      with:
    # Set always-auth in npmrc.
        always-auth: true
        # Version Spec of the version to use. Examples: 12.x, 10.15.1, >=10.15.0.
        node-version: '10.0.0'
        # File containing the version Spec of the version to use.  Examples: package.json, .nvmrc, .node-version, .tool-versions.
        node-version-file: 'myfile'
        # Target architecture for Node to use. Examples: x86, x64. Will use system architecture by default.
        architecture: 'mvc'
        # Set this option if you want the action to check for the latest available version that satisfies the version spec.
        check-latest: 'ok'
        # Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file, and set up auth to read in from env.NODE_AUTH_TOKEN.
        registry-url: 'http//localhost:8080/app'
        # Optional scope for authenticating against scoped registries. Will fall back to the repository owner when using the GitHub Packages registry (https://npm.pkg.github.com/).
        scope: test
        # Used to pull node distributions from node-versions. Since there's a default, this is typically not supplied by the user. When running this action on github.com, the default value is sufficient. When running on GHES, you can pass a personal access token for github.com if you are experiencing rate limiting.
        token: ''
        # Used to specify a package manager for caching in the default directory. Supported values: npm, yarn, pnpm.
        cache: ok
        # Used to specify the path to a dependency file: package-lock.json, yarn.lock, etc. Supports wildcards or a list of file names for caching multiple dependencies.
        cache-dependency-path: package-lock.json
              
